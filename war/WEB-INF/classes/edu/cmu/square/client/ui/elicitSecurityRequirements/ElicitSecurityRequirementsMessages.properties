purpose = <p>This step is the heart of the ASQUARE process: the elicitation of security requirements. To the benefit of the requirements engineering team, most elicitation techniques provide detailed guidance on how to perform the elicitation, so this step is simply a matter of executing the technique. However, even if the stakeholders are very knowledgeable about the project and communicate effectively, it can be challenging for the requirements engineering team to elicit correct requirements. </p><p>Perhaps the largest mistake that the requirements engineering team can make in this step is to elicit non-verifiable or vague, ambiguous requirements. Each requirement must be stated in a manner that will allow relatively easy verification once the project has been implemented. For instance, the requirement "The system shall improve the availability of the existing customer service center" is impossible to measure objectively. Instead, the requirements engineering team should encourage the production of requirements that are clearly verifiable and, where appropriate, quantifiable. A better version of the previously stated requirement would thus be "The system shall handle at least 300 simultaneous connections to the customer service center".</p><p>A second mistake that the requirements engineering team can make in this step is to elicit implementations or architectural constraints instead of requirements. Requirements are concerned with what the system should do, not how it should be done.</p><p>All elicitation techniques will probably involve face-to-face interaction with the stakeholders, so it is also the responsibility of the requirements engineering team to make logistical arrangements with the stakeholders and inform them of the amount of time they can expect to spend in this part of the SQUARE process.</p>
stakeholderResponsibilities =  
requirementsEngineerResponsibilities =  

aoeResponsibilities = 
securityResponsibilities = <ul><li>In case 3 the Security Specialist generates a list of preliminary security requirements. As before, these requirements provide the basis for all subsequent steps of the methodology. Along with the quality attributes elicited in the next step, they will serve as the evaluation criteria for prioritizing software packages.</li></ul>
cotsResponsibilities =  
contractorResponsibilities =   <ul><li>In case 1 the Contractor generates a list of preliminary security requirements. These requirements provide the basis for all subsequent steps of the methodology.</li></ul>

exitCriteria = <p>An initial set of security requirements for the system has been elicited and documented. It is not necessary that the set be considered final or completely correct.</p>    
webHint =  <p>Requirements will be collected in the tool and information for linking requirements for traceability purposes will also be solicited.  The tool also provides an easy means for reviewing the collected requirements.</p>
title = Identify Preliminary Security Requirements